{"mappings":"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","sources":["src/js/main.js","src/js/authrules.js","src/js/cursorlogic.js"],"sourcesContent":["const jwtDecode = require(\"jwt-decode\");\r\nconst SockJS = require(\"sockjs-client\");\r\nconst { Client } = require(\"@stomp/stompjs\");\r\nimport \"./authrules.js\";\r\n","import { jwtDecode } from \"jwt-decode\";\r\nimport SockJS from \"sockjs-client\";\r\nimport { Client } from \"@stomp/stompjs\";\r\nimport { setGlobalCursorWait, resetGlobalCursor } from \"./cursorlogic\";\r\n\r\n// Определение функции connectWebsocket для подключения к WebSocket\r\nfunction connectWebsocket(username) {\r\n  const socket = new SockJS(\"http://94.242.53.252:8081/api/ws\");\r\n  const stompClient = new Client({\r\n    webSocketFactory: () => socket,\r\n    debug: (str) => console.log(str),\r\n  });\r\n\r\n  // Обработчик успешного подключения\r\n  stompClient.onConnect = (frame) => {\r\n    console.log(\"Connected: \" + frame);\r\n  };\r\n\r\n  // Обработчик ошибок STOMP\r\n  stompClient.onStompError = (frame) => {\r\n    console.error(\"Broker reported error: \" + frame.headers[\"message\"]);\r\n    console.error(\"Additional details: \" + frame.body);\r\n  };\r\n  // Активация STOMP клиента\r\n  stompClient.activate();\r\n}\r\n\r\n//* Назначение переменных для элементов формы и спиннера\r\nconst loginForm = document.querySelector(\".authorize-form\");\r\n\r\nif (loginForm) {\r\n  loginForm.addEventListener(\"submit\", async (event) => {\r\n    event.preventDefault();\r\n\r\n    const login = document.getElementById(\"login\").value;\r\n    const password = document.getElementById(\"password\").value;\r\n    const spinner = document.getElementById(\"spinner\");\r\n    const butNormal = document.getElementById(\"but_normal\");\r\n    const butWarning = document.getElementById(\"but_warning\");\r\n    const butWarning3 = document.getElementById(\"but_warning3\");\r\n    const butFail = document.getElementById(\"but_fail\");\r\n    const butSuccess = document.getElementById(\"but_success\");\r\n\r\n    let showSpinner = () => {\r\n      spinner.style.display = \"block\";\r\n      setGlobalCursorWait();\r\n    };\r\n\r\n    let hideSpinner = () => {\r\n      spinner.style.display = \"none\";\r\n      resetGlobalCursor();\r\n    };\r\n\r\n    let showSuccess = () => {\r\n      butNormal.style.display = \"none\";\r\n      butSuccess.style.display = \"block\";\r\n      setTimeout(() => {\r\n        butNormal.style.display = \"block\";\r\n        butSuccess.style.display = \"none\";\r\n      }, 2000);\r\n    };\r\n\r\n    let showFail = () => {\r\n      butNormal.style.display = \"none\";\r\n      butFail.style.display = \"block\";\r\n      setTimeout(() => {\r\n        butNormal.style.display = \"block\";\r\n        butFail.style.display = \"none\";\r\n      }, 2000);\r\n    };\r\n\r\n    let showWarning = (button) => {\r\n      butNormal.style.display = \"none\";\r\n      button.style.display = \"block\";\r\n      setTimeout(() => {\r\n        butNormal.style.display = \"block\";\r\n        button.style.display = \"none\";\r\n      }, 2000);\r\n    };\r\n\r\n    // Отображение спиннера и установка глобального курсора \"wait\"\r\n    showSpinner();\r\n\r\n    // Проверка наличия логина и пароля, корректность email\r\n\r\n    if (!login) {\r\n      showWarning(butWarning);\r\n      hideSpinner();\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      showWarning(butWarning);\r\n      hideSpinner();\r\n      return;\r\n    }\r\n\r\n    if (login.includes(\"@\")) {\r\n      const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!emailPattern.test(login)) {\r\n        showWarning(butWarning3);\r\n        hideSpinner();\r\n        return;\r\n      }\r\n    }\r\n\r\n    //! Отправка запроса на сервер для авторизации\r\n    try {\r\n      const response = await fetch(\"http://94.242.53.252:8081/api/signIn\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ login, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const token = await response.text();\r\n        localStorage.setItem(\"token\", token);\r\n\r\n        if (token) {\r\n          const decodedToken = jwtDecode(token);\r\n          const username = decodedToken.sub;\r\n          localStorage.setItem(\"username\", username);\r\n          connectWebsocket(username);\r\n\r\n          //* Выполнение GET запроса для получения профиля\r\n          const profileResponse = await fetch(\r\n            \"http://94.242.53.252:8081/api/profile\",\r\n            {\r\n              method: \"GET\",\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n            }\r\n          );\r\n          // Получение и сохранение ID пользователя из профиля\r\n          if (profileResponse.ok) {\r\n            const profileData = await profileResponse.json();\r\n            const userId = profileData.id;\r\n            localStorage.setItem(\"userId\", userId);\r\n            showSuccess();\r\n            window.location.href = \"../../src/html/mainchat.html\";\r\n          } else {\r\n            console.error(\"Failed to fetch profile data\");\r\n            showFail();\r\n            hideSpinner();\r\n          }\r\n        } else {\r\n          hideSpinner();\r\n        }\r\n      } else {\r\n        showFail();\r\n        hideSpinner();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during login:\", error);\r\n      hideSpinner();\r\n    }\r\n  });\r\n}\r\n","export function setGlobalCursorWait() {\r\n  spinner.style.display = \"block\";\r\n  document.body.classList.add(\"cursor-wait\");\r\n}\r\n\r\nexport function resetGlobalCursor() {\r\n  spinner.style.display = \"none\";\r\n  document.body.classList.remove(\"cursor-wait\");\r\n}\r\n"],"names":[],"version":3,"file":"main.js.map"}